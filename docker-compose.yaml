version: '3'

volumes:
  postgres_data: {}

services:
  strapi:
    build:
      context: .
      dockerfile: strapiDocker
    environment:
      DATABASE_CLIENT: postgres
      DATABASE_NAME: sellerApp
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: strapi
      DATABASE_PASSWORD: strapi
      DATABASE_SCHEMA: public
    ports:
      - '1337:1337'
    depends_on:
      - postgres
    networks:
      - ondc-net

  seller:
    build:
      context: .
      dockerfile: sellerApiDocker
    environment:
      FIREBASE_SERVICE_ACCOUNT_JSON_PATH: lib/config/firebase-service-account.json
      STRAPI_SERVER_URL: http://strapi:1337
      DATABASE_NAME_SELLER_CLIENT: sellerApp
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: strapi
      DATABASE_PASSWORD: strapi
      NODE_ENV: development
      STRAPI_API_TOKEN: 8e04a7b87f157ae43d1c943b1e14343e13a7aa9d2809565ed52d9704188aeff4ee765bc7163a61c0481f900e8dfef4f064fbf2bb0ba98289f1bec41e03d29de893da2e234baba54c1003a5f0283866d09443aa44538be90780c94286b76e6e0ce9a39d1321818b146fef0f6e70d283135094b5639067024fa594ff8689105404
    ports:
      - '8080:8081'
    depends_on:
      - strapi
    networks:
      - ondc-net
 
  postgres:
    image: postgres
    environment:
      POSTGRES_DB: sellerApp
      POSTGRES_USER: strapi
      POSTGRES_PASSWORD: strapi
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - ondc-net

networks:
  ondc-net:
    driver: bridge